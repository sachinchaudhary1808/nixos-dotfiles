#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.
cleanup_programs() {
    pkill  i3bar-river
    pkill  swww-daemon
    pkill  nm-applet
    pkill  lxqt-policykit-agent
    pkill  blueman-applet
    pkill  swaync
    pkill  wl-paste
    
    # Give programs time to clean up
    sleep 0.1
}

# Kill existing programs
cleanup_programs

# exec your programs
exec swww-daemon &
exec nm-applet --indicator &
exec lxqt-policykit-agent &
exec blueman-applet &
exec swaync &
exec wl-paste --watch cliphist store &

#variables
term="foot"

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

# Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Super Return spawn $term

# spawn browser
riverctl map normal Super+Shift B spawn firefox-esr

# show rofi
riverctl map normal Super D spawn "rofi -show drun"


# reload
riverctl map normal Super+Shift C spawn "$HOME/.config/river/init"

# Super+Q to close the focused view
riverctl map normal Super C close

# Super+Shift+E to exit river
riverctl map normal Super+Shift E exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super+Shift Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'wpctl set-volume @DEFAULT_AUDIO_SINK@ 7%+ --limit 1.0'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'wpctl set-volume @DEFAULT_AUDIO_SINK@ 7%- --limit 0'
	riverctl map $mode None XF86AudioMute         spawn 'wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle'

  # Control volume source aka microfphone
  riverctl map normal Super XF86AudioRaiseVolume  spawn 'wpctl set-volume @DEFAULT_AUDIO_SOURCE@ 7%+ --limit 1.0'
  riverctl map normal Super XF86AudioLowerVolume  spawn 'wpctl set-volume @DEFAULT_AUDIO_SOURCE@ 7%- --limit 1.0'
  riverctl map $mode None XF86AudioMicMute     spawn 'wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle'


    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'


	# show rofi with clipboard
    riverctl map $mode None Insert spawn 'cliphist list | rofi -dmenu | cliphist decode | wl-copy'

	#screenshots
	riverctl map $mode None Print spawn 'grim -g "$(slurp)" - | wl-copy && wl-paste > ~/Pictures/Screenshots/Screenshot-$(date +%F_%T).png | notify-send "Screenshot of the region taken" -t 1000 # screenshot of a region'

	riverctl map normal Shift Print spawn 'grim - | wl-copy && wl-paste > ~/Pictures/Screenshots/Screenshot-$(date +%F_%T).png | notify-send "Screenshot of whole screen taken" -t 1000 # screenshot of the whole screen'


	riverctl map $mode None xf86calculator spawn "$term -e python3"
	# riverctl map $mode None F7 spawn " output eDP-1 dpms toggle"
	riverctl map normal Super F9 spawn "$HOME/nixos-dotfiles/modules/scripts/conservation_mode/on.sh"
	riverctl map normal Super+Shift F9 spawn "$HOME/nixos-dotfiles/modules/scripts/conservation_mode/off.sh"




done

riverctl map normal Super+Shift F spawn "thunar"

riverctl map normal Super M spawn "foot -e nvim"

riverctl map normal Super O spawn "swaync-client -op"

riverctl map normal Super Tab spawn "rofi -show window"

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 6 -outer-padding 6 &


# Lock the screen with swaylock when pressing Mod+End
riverctl map normal Super+Escape L spawn "swaylock"
riverctl map normal Super+Shift U spawn "systemctl suspend"

# Idle and suspend behavior with swayidle
swayidle -w \
    timeout 300 'swaylock -f' \
    timeout 490 'systemctl suspend' \
    before-sleep 'swaylock -f'  &
    # after-resume 'swaymsg output eDP-1 dpms on'


# Prevent audio from interrupting idle timer
exec sway-audio-idle-inhibit &

# Enable tap to click
riverctl input pointer-1739-52781-MSFT0001:00_06CB:CE2D_Touchpad tap enabled
riverctl input pointer-1739-52781-MSFT0001:00_06CB:CE2D_Touchpad set sensitivity 0.7

riverctl focus-follows-cursor normal


exec waybar &

